///https://cses.fi/problemset/task/1669/

///   ***   ---   ||         ALLAHU AKBAR        |||   ---   ***   ///
 
 
 
#include<bits/stdc++.h>
using namespace std;
 
 
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef pair<int,int> pii;
typedef pair<double, double> pdd;
typedef pair<ll, ll> pll;
typedef vector<pii> vii;
typedef vector<pll> vll;
typedef double dl;
 
#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define sz(x) (int)x.size()
#define nl cout<<endl
 
const double PI = acos(-1);
const double eps = 1e-9;
const int inf = 2000000000;
const ll infLL = 9000000000000000000;
#define MOD 1000000007
 
#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))
 
#define bismillah ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);
#define file() freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
 
 
ll gcd ( ll a, ll b ) { return __gcd ( a, b ); }
ll lcm ( ll a, ll b ) { return a * ( b / gcd ( a, b ) ); }
 
 
int dx[] = { 0, 0, +1, -1, -1,  +1, -1, +1 };
int dy[] = { +1, -1, 0, 0, -1, +1, +1, -1 };
 
int n,m;
vvi adj;
vi par,cycle,color;
bool dfs(int source,int p)
{
    color[source] = 1;
    par[source] = p;
    for(auto child: adj[source])
    {
        if(child == p) continue;
        if(color[child] == 1)
        {
            int x = source;
            while(x != child)
            {
                cycle.PB(x);
                x = par[x];
            }
            cycle.PB(child);
            cycle.PB(source);
            return true;
        }
        else if(color[child] == 0)
        {
            if(dfs(child,source))
            {
                return true;
            }
        }
    }
    color[source] = 2;
    return false;
}
 
 
int main()
{
    bismillah;
    cin>>n>>m;
    adj.resize(n+1);
    par.resize(n+1,-1);
    color.resize(n+1,0);
    for(int i=0;i<m;i++)
    {
        int u,v;
        cin>>u>>v;
        adj[u].PB(v);
        adj[v].PB(u);
    }
 
    for(int i=1;i<=n;i++)
    {
        if(color[i] == 0)
        {
            if(dfs(i,-1))
            {
                cout<<cycle.size()<<endl;
                for(auto u : cycle)
                {
                    cout<< u<< " ";
                }
                cout<< endl;
                return 0;
            }
        }
    }
    cout << "IMPOSSIBLE\n";
 
 
    return 0;
}
 
